import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import shap
from catboost import CatBoostClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, recall_score, confusion_matrix

st.set_page_config(
    page_title="2023-—Ñ–≥–∏–∏–±-–ø–∏1–±_7_–î—É–±–æ–≤_–ê—Ä—Ç—ë–º_–ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á_–¥–∞—Ç–∞—Å–µ—Ç_—Ä–∏—Å",
    layout="wide",
    initial_sidebar_state="expanded"  # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
)

st.markdown("""
    <style>
    .main {background-color: #f0f8ff;}  /* –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω */
    h1 {color: #2e8b57;}  /* –¶–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ */
    .stTabs [data-baseweb="tab"] {background-color: #add8e6; border-radius: 5px;}  /* –°—Ç–∏–ª—å —Ç–∞–±–æ–≤ */
    </style>
    """, unsafe_allow_html=True)

st.title("2023–ø–∏1–±_7_–î—É–±–æ–≤_–ê—Ä—Ç—ë–º_–ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á_–¥–∞—Ç–∞—Å–µ—Ç_—Ä–∏—Å")

with st.sidebar:
    st.header("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
    st.markdown("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–±—ã –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–¥–µ–ª–æ–≤.")

@st.cache_data
def load_data(path="data.csv"):
    df = pd.read_csv(path)
    return df

df = load_data()

X = df.drop(columns=["Class"])
y = df["Class"]
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42, stratify=y
)
model = CatBoostClassifier(
    iterations=500,
    learning_rate=0.05,
    depth=6,
    l2_leaf_reg=3,
    bootstrap_type="Bernoulli",
    subsample=0.8,
    random_seed=42,
    verbose=0
)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
acc = accuracy_score(y_test, y_pred)
recall = recall_score(y_test, y_pred, average="macro")

explainer = shap.TreeExplainer(model)
shap_values = explainer.shap_values(X_test)

tab1, tab2, tab3 = st.tabs(["üìä –û–ø–∏—Å–∞–Ω–∏–µ –∏ –º–µ—Ç—Ä–∏–∫–∏", "üîç –ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ –∏ SHAP", "üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤"])

with tab1:
    st.markdown("### –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö")
    st.info(f"- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–∑—Ü–æ–≤: {df.shape[0]}\n"
            f"- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤: {df.shape[1]-1} (–±–µ–∑ —Ü–µ–ª–µ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π)\n"
            f"- –ü—Ä–∏–∑–Ω–∞–∫–∏: {', '.join(df.columns.drop('Class'))}\n"
            f"- –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö: {df.dtypes.value_counts().to_dict()}")  
    
    st.markdown("### –¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏")
    st.success(f"- Accuracy: **{acc:.4f}**\n- Recall (macro): **{recall:.4f}**") 

with tab2:
    st.markdown("### –ê–Ω–∞–ª–∏–∑ –º–æ–¥–µ–ª–∏")
    col1, col2, col3 = st.columns([1, 1, 1])
    
    with col1:
        st.subheader("–ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫")
        cm = confusion_matrix(y_test, y_pred)
        fig1, ax1 = plt.subplots(figsize=(5, 4)) 
        sns.heatmap(cm, annot=True, fmt="d", cmap="Greens", ax=ax1)
        ax1.set_xlabel("Predicted")
        ax1.set_ylabel("Actual")
        st.pyplot(fig1)
    
    with col2:
        st.subheader("SHAP: –í–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
        st.image("1.png", use_container_width=True, caption="Bar plot")  # –î–æ–±–∞–≤–∏–ª–∏ –ø–æ–¥–ø–∏—Å—å
    
    with col3:
        st.subheader("SHAP: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è")
        st.image("2.png", use_container_width=True, caption="Dot plot")

with tab3:
    st.markdown("### –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("**–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ Area**")
        fig4, ax4 = plt.subplots(figsize=(5, 4))
        sns.histplot(data=df, x="Area", kde=True, ax=ax4, bins=30, color="lightgreen")  # –ò–∑–º–µ–Ω–∏–ª–∏ —Ü–≤–µ—Ç
        st.pyplot(fig4)
    
    with col2:
        st.markdown("**Scatter Plot: Area vs. MajorAxisLength**")
        fig5, ax5 = plt.subplots(figsize=(5, 4))
        sns.scatterplot(data=df, x="Area", y="MajorAxisLength", hue="Class", palette="coolwarm", s=30, ax=ax5)  # –ò–∑–º–µ–Ω–∏–ª–∏ –ø–∞–ª–∏—Ç—Ä—É –∏ —Ä–∞–∑–º–µ—Ä —Ç–æ—á–µ–∫
        st.pyplot(fig5)

# –§—É—Ç–µ—Ä —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
st.markdown("---")
st.caption("–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –î—É–±–æ–≤—ã–º –ê—Ä—Ç—ë–º–æ–º –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á–µ–º | 2023 | –î–∞—Ç–∞—Å–µ—Ç –ø–æ —Ä–∏—Å—É")  # –î–æ–±–∞–≤–∏–ª–∏ —Ñ—É—Ç–µ—Ä
